## Autogenerated by Scribe. DO NOT MODIFY.

name: Auth
description: |-

  APIs for auth
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/auth/login
    metadata:
      groupName: Auth
      groupDescription: |-

        APIs for auth
      subgroup: ''
      subgroupDescription: ''
      title: Login
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'required. The email user'
        required: false
        example: kopnus@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'required. The password user'
        required: false
        example: Secret12345
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: kopnus@example.com
      password: Secret12345
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/auth/register
    metadata:
      groupName: Auth
      groupDescription: |-

        APIs for auth
      subgroup: ''
      subgroupDescription: ''
      title: 'Register a user'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 100 characters.'
        required: true
        example: lgibson@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      name:
        name: name
        description: 'Must be at least 3 characters. Must not be greater than 255 characters.'
        required: true
        example: irdgkzhulaqfysez
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_type:
        name: user_type
        description: ''
        required: true
        example: applier
        type: string
        enumValues:
          - company
          - applier
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: 'l2EOLssP-5m7"C['
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      confirm_password:
        name: confirm_password
        description: 'The value and <code>password</code> must match.'
        required: true
        example: praesentium
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: lgibson@example.net
      name: irdgkzhulaqfysez
      user_type: applier
      password: 'l2EOLssP-5m7"C['
      confirm_password: praesentium
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/auth/me
    metadata:
      groupName: Auth
      groupDescription: |-

        APIs for auth
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Profile'
      description: ''
      authenticated: false
      custom: []
    headers:
      Authorization: 'Bearer <token>'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/auth/update
    metadata:
      groupName: Auth
      groupDescription: |-

        APIs for auth
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Profile'
      description: ''
      authenticated: false
      custom: []
    headers:
      Authorization: 'Bearer <token>'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
